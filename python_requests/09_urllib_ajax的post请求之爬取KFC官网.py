
import urllib.request
import urllib.parse

# 请求对象定制
def creat_request(page):
    base_url = 'https://www.kfc.com.cn/kfccda/ashx/GetStoreList.ashx?op=cname'

    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36 Edg/129.0.0.0',
        'cookie':'USRLOC=; _EDGE_V=1; APP_ANON=A=3F5E9CB26B2EED7DB3F19A0AFFFFFFFF; els=%7b%22account_type%22%3a%22MSA%22%7d; MUID=1D4500585A766EDC216A154B5B586F4B; OptanonAlertBoxClosed=2024-10-09T01:15:40.974Z; eupubconsent-v2=CQGOnvBQGOnvBAcABBENB-CgAAAAAH_AACiQIhtf_X__b3_j-_5___t0eY1f9_7_v-0zjhedt-8N3d_X_L8X_2M7vF36pq4KuR4Eu3LBAQVlHOHcTUmw6IkVqzPsbk2cr7NKJ7PEmnMbe2dYGH9_n93T-ZKY7______7_v-_______f__-_____5_1---wAAB8gd7Lv9_____9_P___9v-_9____giHAfAA-ADgAZQA6ACKAFLAKcAZ8BgQDBAGWAMzAbmA3wB2IDtgHcgO8AfZBBMEFAIMQQaBBsCDwEIYIUghXBC4ELwIZgQ1ghyCHUEPARAAiGAkEgpAAIAAXABQAFQAMgAcgA8AEAAMAAZQA0ADUAHkAQwBFACYAE-AKoArABYADeAHMAPQAfgBCQCGAIkAR0AlgCXAE0AKUAW4AwwBkADLAGqANkAd8A9gD4gH2AfsBAAEDgIuAjEBGgEcAJSAUEAp4BVwC5gGKANEAawA2kBuAG8AOIAegA-UCGwIdASIAmIBMoCbAE7AKHAUiApoBYoC0AFsALkAXeAvMBgwDCQGGgMPAZEAyQBk4DLgGcgM-AaQA06BrAGsgNvAeOA9oB8oQBxAA4ADwASABGAC2AH8ASIAzQBqADagHMAc4A6gCDgE_AKGAUsA6oCHwEXgI9ASEAkUBKwCbQFPgLCAXQAuoBdoC8gGBAMQAYsAyEBkYDJgGhANGAaUA1MBtADbgG6AOCAdIA7AB2YDugHgQPJA8oB7oD5AH2AP3AgIBAwCCIYAsAEYAKgAWwA3gCkAGoAOYAloBSwDZAHUAReAkIBIoCxAGBAMjAaEA3QBxIDswHuhoEIAVgAuACGAGQAMsAbIA7AB-AEAAIKARgAp4BV4C0ALSAawA3gB1QD5AIdARUAkQBNgCdgFIgLkAYSAw8BjADJwGcgM8AZ8A_AQAUABIADUAIwAWwA3gCkAGoAOYAloBSwDeAIvASEAkUBgQDQgG6AOJAdmA90RAaACsAIYAZAAywBsgDsAH4AQAAjABTwCrgGsAOqAfIBDoCRAE2AJ2AUiAuQBhIDDwGTgM5AZ8A_AVAcAAoAEMAJgAXABHADLAHYAPwAjABHACrwFoAWkA3gCQQExAJsAU2AtgBcgC8wGHgMiAZyAzwBnwDcgH4AQvFAFQBMgCkAGoANoAcwA8ACCgEtAKWAdUBHoCRQFiAMCAaEA14Bt4DiQH2AQPAg2MgNAAUACGAEwARwAywB2QD7APwAjABHACrgFbAN4Ak4BMQCbAFogLYAXmAw8BkQDOQGeAM-AfEA_ACF4wAqADUATIApABqADaAHMAPAAloBSwCxAHVAR6AkUBYgC8gGBANCAbeA4kB9gEGxwF0ABEADgAPAAuACQAHIAPwAjABbADIAGgAP4AhABIgCkAFnAMsAzQBqADagHMAc4A6gB2ADuAIAAQWAg4CEAERAJaATaAnwCfgFLAKgAW0AvUBgAGBANYAa8A3gBxwDpAHVAPIAfIBCACHwEegJCASLAlYCVwExAJlATaAoUBSACkwFMAKmAVUArYBXYCygFqALigXQBdQC9gF9AMCAYgAxYBkIDJgGXgNCgaKBowDSgGmgNTAa8A2gBtgDbgHEgOkAdgA7MB2oDwIHkgeUA90B8QD7IH7AfuBA8CCI6DaAAuACgAKgAZAA5AB8AIAAXQAwADKAGgAagA8AB9AEMARQAmABPgCqAKwAWIAuAC6AF8AMQAZgA3gBzAD0AH6AQwBEgCOgEsATAAmgBRgClAFiALeAYQBhwDIAMoAaIA2QBvgDvAHtAPsA_QB_gEDgIsAjABHICUgJUAUEAp4BVwCxQFoAWmAuYC6gF5AMUAbQA3ABxIDpgOoAeiBDYEOgIiARUAi8BIICRAEqAJkATYAnYBQ4CmgFWALFAWhAtgC2QFwALkAXaAu8BeYDBgGEgMNAYeAxIBjADHgGSAMnAZUAywBlwDOQGfANEgaQBpIDSwGnANVAawA2MBt4DxwHpAPVAe0A-UB9cD8APxAgCBBIgA4AAQAD8ANAAfwBIgCkAGWANQAbUA5gDnAHYAPAAgoBPgClgFiAMAAYQA3gB1QDtgIfAR6AkIBIoCVwExAJtAUKApABSYCtgF0ALyAXsAwIBoQDRQGlANTAbYA24BxIDowHYQPJA8oB6ID3QHxAPsAfsBA8CDAEGwIUAQrIQPwAFgAUAAyAC4AGIAQwAmABTACqAFwAL4AYgAzABvAD0AI4AWIAwgBvgDvgH2AfgA_wCMAEcAJTAUEBQwCngFXgLQAtIBcwDFAG0AOoAegBIICRAEnAJUATYApoBYoC0YFsAW0AuABcgC7QGHgMSAZEAycBnIDPAGfANEAaSA0sBqoDgAHagPHAfgBBICF5KB6AAgABYAFAAMgAcgBgAGIAPAAiABMACqAFwAL4AYgAzABtgEMARIAjgBRgClAFuAMIAaoA2QB3gD8AIwARwAk4BTwCrwFoAWkAuoBigDcAHUAPkAh0BFQCLwEiAJsAWKAtgBdoC8wGHgMiAZOAywBnIDPAGfANIAawA28BwADtQHtAPwAgeBBIkAsAAcABcAEIAOQAlgBUADIAG8AQgAkQBSQC5AL4AZYA1ABtADmAHcAQAAhIBLQCfAFQANeAbwA6oB9gEegJFASsAm0BSYCygF0AL2AYsA0oBuQDiQHSAOwAeUA-wB-4EESkE0ABcAFAAVAAyAByAD4AQQAwADKAGgAagA8gCGAIoATAAngBSACqAFgAL4AYgAzABzAD9AIYAiQBRgClAFiALcAYQAygBogDVAGyAO-AfYB-gEWAIwARwAlMBQQFDAKuAVsAuYBeQDFAG0ANwAegBDoCLwEiAJOATYAnYBQ4CxQFoALYAXAAuQBdoC8wGGgMPAYwAyIBkgDJwGXAM5AZ4Az6BpAGkwNYA1kBsYDbwHagPHAe0A-UB-BQCaABcAEIAJAAcgA_ACMAFQAKwAZAA2gBvAEIAI4ASIAmQBSAC5AGWANQAa4A2oBzAHOAOoAdwA8ACAAEJAIqASIAk4BLQCbAE7gJ8An4BSwCxAF1AMAAa8A3gB1QDtgHkAP-Aj0BIoCYgEygJtAUgApgBT4CpgFbAK7AXQAvIBfQDAgGLAMmAaIA0oBpsDUgNTAa8A4IBxIDsAHZgPKAe6A-IB9kD9gP3AgYBA8AAA.YAAAD_gAAAAA; _EDGE_S=SID=0449FED715726E14097BEBCD14E36F38; elt=%7B%22access_token%22%3A%22eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkExMjhDQkMtSFMyNTYiLCJ4NXQiOiJFY2tFODJLeld2ZGc1RFhkZ1c5LUUyU2ZYbGciLCJ6aXAiOiJERUYifQ.VIViK-nR67EOHlyg_AOo3Bz_p3SrEGNarN0Xrq0lgCY_q3WIrWPSVjuJtb2gYKGnvt1PijLdhR27UuPaS7j71HtqCdnuPitVLkWr3bqAMPcHftOOf0iv2PJLh_nxvNxy6pSEHopE_SJPguY8m62fzIRoKzPK_jQU_qDw9Uq7apPpON5qtAnzwEtmmMdMBmBEndftyIXrtNZZhY0LxduJZHeg1itX_R3nvYnumG5GLMw_aP30-381fdPRMLXZYtI0F71J0r-1kazmTEDHcjzHu1LMX2_KCgm8dEfceKN1i9OrL-aXEaczgyGFG1IDVbKMhR2OptrWFF_zDOlBk7m8ug.2kSCKozt4hJM-aDolslq1Q.UlXmLHQ04EzNTypsN7HGFmKmjsdTcVuiaPaFMcIQz3SrZNhvhjEHqPSS_l45YTsPErmJFeFtn40w2vTbkZsbedOwtPBUzqkz4JpGfCQZGgeQD_5wvD7TTKne7NMdx8-_vk73dk4in0djLj5rcOFbmi2eierZfvKsVcmC2mWNPYlxcsbalKClHiklovKCTn1d_SFZkpZ6WA4O6486t4n-92RPPJxPTALJtcEpJDtAIkGncSZb4QSQHHzf2sMXBJys4VRU8V2_DFaSUzAkYjTXmHEyu6Lpqk5pYPXSxXpOTjXG5snggqLjdSyRFw6nsC-0SZHz4lsoLt3NxVH73OEp5qJzbG0g0FwV4eOx82BTcd4e9b5J0fzp24yAAq3fwsu6c0D_QkPKXp64qw9iuNqEBOJl_fPYHF7q5lyL0piyHb_mS64ClgOhmfs-ISKYZOJ-W15PBM0tjNg12Wc2OvnUT3UkLPN6XSAU4_xelqfaahtcrvkDKaSx46WRvG7Ykp_bshfnl72UTk6Gm5Nv0qFGMYAWWmMMBn82ktOq3Bn7ub9V_uWp__8xhz2W7wmruiFUEaqIU-20O4kZTmwxqMsO2egSb0s74h54iNPpLY4m0vl4Tiv8jiA1CDyfoLTpBI4dsequ_SwyZOZL8uhzX3yRcCNjjz6qf_Ccd6-c3w0s1ilLUn2kw849eSrAP_lggIupE4O0U8aXdxu8Bxjn542jC_Y_1TqQW6qnMZNIqPOQg0hX01yRgD9mfXSqR42PdYvaZ2geyucgQbOkx_QNKaD_769TLBVLmt_s9aa281EJ7sxAolU9GSOy74x4NeXfTeSuTcSylhtOHe-Ah8BAP53WW2S7njXHZsceXkWi4terSmJGjH2rK42vM-qg7OaZNm-Xh8HFhGTDuRFX0UldkDJ6kutRKXfJ8j3MmLK6eeVOaMRmcOarcxB1ODrjzCTKn5u6ajFNA5QQl0CyIsbcqJkYUGzXuGDckuudPB6GCAED3fh8WFWpR9Ae6KpCTukUKtO_dTSN1dK-FmrNiM7DmdPFOg-pbMJVp-0SaqAWxQs4SiJyGse3XTtXFtuCgGKJGqqdA6liu9ArvlZAgNhVq4ZXhgM808BsmuQVVDwd5QNFcGn5iak-ay7RWcyu8csxHwnztXHHIJ3CzRE-nZ52NH2CEcKn7K-LfaZnwzfN5H7t7O7hr-brq3rsq79LnZtNKaymvpwyf1OSGrQN7TLeXx2VN2IYd_c3UV5xFkAkywUJjrWVNMP-2oddlWY9MLYzTYaAC-8PSYI3DTFPDDJzEuRPTGsalOYJqYnl8WaRhuMCetfihYYnmLfXlSMAzweZNFDSEcz56m7WrrMSqzJkq3QjelsoAa2n4Nf_o5ckrZTMDw4t6VjSFJJMJFJmgTtPF8asb4JtzSVUNq4cwxkYRPTDrINUv1ZroJrC1tNH_zhYXvk.IcCq4er24iJmJbPoidMzLA%22%2C%22account_type%22%3A%22MSA%22%2C%22login_hint%22%3A%223268048793@qq.com%22%2C%22e%22%3A%222de349b2%22%7D; lt=t=EwBIA6AEAAAU+FEkrYVKODxcga16pzW/y5vRf68AAbW71mOFgHqsOrt0BVMpCh5ZepnPOY6iasfdBDGXy6bI65SBtRSYHNKNdNaDnRLMeXuxeDs1JxGW+ZRcHMNjciNqL8ytaKhuKgGIyzrt7siREZcKgcH2vVcTOHKG4Mb0pZkdPURQroauQsXHxlJ+vESmcPabhWK5I83p8oxChjDi2yZrVvGD93K/Vjh2Bvlue8rWPTGYh3AnEF3iAHyd4UQhOceFBiciFYEkWIN+FrdibXk4ri0o4Yz/fGD4JZqxzKn8+VNwDQcEb+9J7mOMJa30nax68Tdmj71n0MMmCEPPg2/BQUisiYjbw/+p9sXA45IoKo23hrT//ii/aKVLuKIQZgAAECO2TPfG52+QAsp75O+AKEsQAp0/yMKEALbAhzA8rTRo4Vw6em/cyzDAHwxdd+XOE3y2mT8RPUok18BpmlpUBmEeLou1u5J1X9ACsWYXOlfb0QWNUsQSdOEUwtHNspiGNaj7CsxwismYwI0zAZ0QN3hbuxX8Jwvjsi2TPc7ND2UHeqPJ7LmJgojR9D+MemYwr/JY99dUme+9PeYv+ZkgpDJWeckCjLKVqpexUN/A/x3ezvo3uGVyVZasDnMp5jOj0it/upVyuJKKtOmMdMDYXqW9F/LZlWKspxtbjMr4ESTkFlD/gB/S34F5mdHcJOphL3VZypQkLCq15HvAZVONJVRZQFabLSHnCXdCXfLUKHwLwDJFHoANpi86OTtFQ6ZRcbZWRuKOOYxpyJC9YdRNipoQNxScXr5h3eRm1CwDhiPIMAfZY8Z+4awJIP9AMusQ3Rc6/VgRVn8vuep14QSnx56JmK0mqjUjCYmsGmCTHnYOvrM1Y3QHsgVojTvLM3J4lTAWWi6GGkpIkQYcPEVTXd1ZjetnvER7Umu+mkytDsDxUI0ULMHQWL8vGXNjYU5Di6EBY2UuU+KOLp/7ZpBbhODFLuikxCEU3o8WQqQnyAaLcIqKKVmm3c+9oPnUMXuMu3V1uu42oLWrcvSuk5lUib/2GuMw3+5Zfv07qFiiBNaYPT2e0V1J/XTLhWtF1lBKKeeT6eaX4U9Wd6yS1v6JsDiIaEEC&p=; OptanonConsent=isGpcEnabled=0&datestamp=Wed+Oct+16+2024+09%3A32%3A00+GMT%2B0800+(%E4%B8%AD%E5%9B%BD%E6%A0%87%E5%87%86%E6%97%B6%E9%97%B4)&version=6.25.0&isIABGlobal=false&hosts=&consentId=71e52408-3a7b-47b5-b53a-aa81844fea65&interactionCount=1&landingPath=NotLandingPage&groups=C0001%3A1%2CC0002%3A0%2CC0004%3A0%2CC0008%3A0%2CSTACK42%3A0&AwaitingReconsent=false&geolocation=%3B; aace=%7b%22child%22%3a0%2c%22expiredOn%22%3a%222025-04-14T01%3a31%3a52%22%7d; _C_ETH=1'
    }

    data = {
        'cname': '唐山' ,
        'pid':'',
        'pageIndex': page,
        'pageSize': 10
    }
    data = urllib.parse.urlencode(data).encode('utf-8')

    request = urllib.request.Request(url=base_url,headers=headers,data=data)
    return request

# 模拟浏览器发送请求并接受数据
def response_content(request):
    response = urllib.request.urlopen(request)
    content = response.read().decode('utf-8')
    return content

# 下载数据
def download(page,content):
    # 使用 + 进行数据的拼接时，+ 两端都需要是字符串类型，因此这里 page 需要进行强制数据转换
    with open('KFC_' + str(page) + '.json', 'w', encoding='utf-8') as f:
        f.write(content)

if __name__ == '__main__':
    start_page = int(input("请输入开始的页码："))
    end_page = int(input("请输入结束的页码："))

    for page in range(start_page, end_page+1):
         request = creat_request(page)
         content = response_content(request)
         download(page,content)

