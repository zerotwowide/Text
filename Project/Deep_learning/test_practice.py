# # 快速输出1-100内的偶数
# list01 = [ x for x in range(1,101) if x % 2 ==0]
# print(list01)

#-----------------------------------------------------------

# # 输出1-10内的所有数字，并将偶数变为负数
# list02 = [ x if x % 2 != 0 else -x for x in range(1,11)]
# print(list02)

#------------------------------------------------------------

# # 仅保留混合列表的字符串元素，并将大写变为小写
# L1 = ['Hello', 'World', 18, 'Apple', None]
# L2 = [ x.lower() for x in L1 if isinstance(x,str)]
# # 测试:
# print(L2)
# if L2 == ['hello', 'world', 'apple']:
#     print('测试通过!')
# else:
#     print('测试失败!')

#------------------------------------------------------------

# # 斐波那契数列
# def fib(max):
#     n, a, b = 0, 0, 1
#     while n < max:
#         yield b
#         a, b = b, a + b
#         n = n + 1
#     return 'done'
#
# f = fib(6)
# for i in f:
#     print(i)

#-----------------------------------------------------------

# # 杨辉三角
# def triangles():
#     L = [1]
#     while True:
#         yield L
#         L = [L[i] + L[i + 1] for i in range(len(L) - 1)]
#         L = [1] + L + [1]
#
# # 期待输出:
# # [1]
# # [1, 1]
# # [1, 2, 1]
# # [1, 3, 3, 1]
# # [1, 4, 6, 4, 1]
# # [1, 5, 10, 10, 5, 1]
# # [1, 6, 15, 20, 15, 6, 1]
# # [1, 7, 21, 35, 35, 21, 7, 1]
# # [1, 8, 28, 56, 70, 56, 28, 8, 1]
# # [1, 9, 36, 84, 126, 126, 84, 36, 9, 1]
# n = 0
# results = []
# for t in triangles():
#     results.append(t)
#     n = n + 1
#     if n == 10:
#         break
#
# for t in results:
#     print(t)
#
# if results == [
#     [1],
#     [1, 1],
#     [1, 2, 1],
#     [1, 3, 3, 1],
#     [1, 4, 6, 4, 1],
#     [1, 5, 10, 10, 5, 1],
#     [1, 6, 15, 20, 15, 6, 1],
#     [1, 7, 21, 35, 35, 21, 7, 1],
#     [1, 8, 28, 56, 70, 56, 28, 8, 1],
#     [1, 9, 36, 84, 126, 126, 84, 36, 9, 1]
# ]:
#     print('测试通过!')
# else:
#     print('测试失败!')

#-------------------------------------------------------------